{"version":3,"sources":["webpack:///./src/components/PostPreview.tsx","webpack:///./src/pages/index.tsx"],"names":["Card","styled","div","withConfig","displayName","componentId","Thumbnail","Title","h3","Metadata","PostPreview","render","_this$props","this","props","imageSizes","title","excerpt","url","date","react","gatsby_image_default","a","sizes","alt","href","React","indexPageQuery","SectionHeading","h2","SectionContainer","Section","id","heading","children","IndexPage","buildPostList","posts","postElements","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","_ref","length","next","done","value","post","node","push","PostPreview_PostPreview","frontmatter","featuredImage","childImageSharp","fields","slug","data","allMarkdownRemark","edges","siteMetadata","site","Layout","SEO","pages_Section","dangerouslySetInnerHTML","__html","description"],"mappings":"2KAaMA,EAAOC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,oBAAAC,YAAA,eAAGJ,CAAH,8EAQJK,EAAYL,IAAOC,IAAVC,WAAA,CAAAC,YAAA,yBAAAC,YAAA,eAAGJ,CAAH,mGAWTM,EAAQN,IAAOO,GAAVL,WAAA,CAAAC,YAAA,qBAAAC,YAAA,eAAGJ,CAAH,wBAILQ,EAAWR,IAAOC,IAAVC,WAAA,CAAAC,YAAA,wBAAAC,YAAA,eAAGJ,CAAH,yBAIOS,4FAEVC,kBAAS,IAAAC,EACsCC,KAAKC,MAA/CC,EADIH,EACJG,WAAYC,EADRJ,EACQI,MAAOC,EADfL,EACeK,QAASC,EADxBN,EACwBM,IAAKC,EAD7BP,EAC6BO,KAEzC,OACIC,EAAA,cAACpB,EAAD,KACIoB,EAAA,cAACd,EAAD,KACIc,EAAA,cAACC,EAAAC,EAAD,CAAKC,MAAOR,EAAYS,IAAKR,EAAOA,MAAOA,KAE/CI,EAAA,mBAAGK,KAAMP,GACLE,EAAA,cAACb,EAAD,KAAQS,IAEZI,EAAA,cAACX,EAAD,KAAWU,GACXC,EAAA,uBAAIH,QAdqBS,kHCFlC,IAAMC,EAAc,YAiCrBC,EAAiB3B,IAAO4B,GAAV1B,WAAA,CAAAC,YAAA,wBAAAC,YAAA,gBAAGJ,CAAH,oBAId6B,EAAmB7B,IAAOC,IAAVC,WAAA,CAAAC,YAAA,0BAAAC,YAAA,gBAAGJ,CAAH,uBAIhB8B,EAAU,SAAAjB,GAAK,OACnBM,EAAA,cAACU,EAAD,CAAkBE,GAAIlB,EAAMkB,IAC1BZ,EAAA,cAACQ,EAAD,KAAiBd,EAAMmB,SACtBnB,EAAMoB,WAIUC,sJAsCXC,cAAgB,SAACC,GACvB,IAAMC,EAAe,GAErBC,EAAmBF,EAAnBG,EAAAC,MAAAC,QAAAH,GAAAI,EAAA,MAAAJ,EAAAC,EAAAD,IAAAK,OAAAC,cAA0B,KAAAC,EAAA,GAAAN,EAAA,IAAAG,GAAAJ,EAAAQ,OAAA,MAAAD,EAAAP,EAAAI,SAAA,KAAAA,EAAAJ,EAAAS,QAAAC,KAAA,MAAAH,EAAAH,EAAAO,MAAA,IAClBC,EADkBL,EACNM,KAElBd,EAAae,KACXjC,EAAA,cAACkC,EAAD,CACEvC,WAAYoC,EAAKI,YAAYC,cAAcC,gBAAgBlC,MAC3DP,MAAOmC,EAAKI,YAAYvC,MACxBC,QAASkC,EAAKlC,QACdC,IAAKiC,EAAKO,OAAOC,KACjBxC,KAAMgC,EAAKI,YAAYpC,QAK7B,OAAOmB,iCArDF3B,kBACL,IAAM0B,EAAexB,KAAKC,MAAM8C,KAAKC,kBAAkBC,MACjDC,EAAelD,KAAKC,MAAM8C,KAAKI,KAAKD,aAE1C,OACE3C,EAAA,cAAC6C,EAAA,EAAD,KAEE7C,EAAA,cAAC8C,EAAA,EAAQH,GAET3C,EAAA,cAAC+C,EAAD,CAASnC,GAAG,QAAQC,QAAQ,SAC1Bb,EAAA,qBAAKgD,wBAAyB,CAAEC,OAAQN,EAAaO,gBAGvDlD,EAAA,cAAC+C,EAAD,CAASnC,GAAG,OAAOC,QAAQ,QAEzBb,EAAA,wBACGP,KAAKuB,cAAcC,KAKxBjB,EAAA,cAAC+C,EAAD,CAASnC,GAAG,UAAUC,QAAQ,WAA9B,+CAGAb,EAAA,4BACIA,EAAA,mBAAGK,KAAK,oCAAR,8BAJJ,UAvB+BC","file":"component---src-pages-index-tsx-3f432445caec6dee0e27.js","sourcesContent":["import * as React from 'react'\nimport styled from \"styled-components\"\n\nimport Img from 'gatsby-image'\n\ninterface PostPreviewProps {\n    imageSizes: object;\n    title: string;\n    excerpt: string;\n    url: string;\n    date: string;\n}\n\nconst Card = styled.div`\nwidth: 85%;\nheight: 100%;\nmin-height: 200px;\nmargin-bottom: 25px;\ndisplay: block;\n`\n\nconst Thumbnail = styled.div`\nwidth: 200px;\nheight: 200px;\nfloat: left;\nmargin-right: 20px;\n\n@media (max-width: 550px) {\n    display: none;\n}\n`\n\nconst Title = styled.h3`\n    margin-bottom: 5px;\n`\n\nconst Metadata = styled.div`\n    margin-bottom: 15px;\n`\n\nexport default class PostPreview extends React.Component<PostPreviewProps, {}> {\n\n    public render() {\n        const { imageSizes, title, excerpt, url, date } = this.props;\n\n        return (\n            <Card>\n                <Thumbnail>\n                    <Img sizes={imageSizes} alt={title} title={title} />\n                </Thumbnail>\n                <a href={url}>\n                    <Title>{title}</Title>\n                </a>\n                <Metadata>{date}</Metadata>\n                <p>{excerpt}</p>\n            </Card>\n        );\n    }\n}","import * as React from 'react'\nimport styled from \"styled-components\"\nimport { graphql } from 'gatsby'\n\nimport PostPreview from '../components/PostPreview';\nimport SEO from '../components/SEO';\nimport Layout from '../components/Layout';\n\ninterface IndexPageProps {\n  data: {\n    site: {\n      siteMetadata: {\n        logo: string,\n        title: string,\n        description: string,\n        siteUrl: string,\n        tagline: string,\n        footerLinks: Map<string, string>,\n        socialLinks: Map<string, string>,\n        settings: {\n          animationsEnabled: boolean\n        }\n      },\n    },\n    allMarkdownRemark: {\n      edges: {\n        node: {\n          excerpt: string,\n          frontmatter: {\n            date: string,\n            title: string\n          }\n        }\n      }\n    }\n  }\n}\n\nexport const indexPageQuery = graphql`\n  query IndexPageQuery {\n    site {\n      siteMetadata {\n          title\n          description\n          siteUrl\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD MMMM, YYYY\")\n            title\n            featuredImage {\n              childImageSharp{\n                sizes(maxWidth: 230, maxHeight: 230) {\n                  ...GatsbyImageSharpSizes\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nconst SectionHeading = styled.h2`\n  color: #f7484e;\n`;\n\nconst SectionContainer = styled.div`\n  padding-top: 35px;\n`;\n\nconst Section = props => (\n  <SectionContainer id={props.id}>\n    <SectionHeading>{props.heading}</SectionHeading>\n    {props.children}\n  </SectionContainer>\n);\n\nexport default class IndexPage extends React.Component<IndexPageProps, {}> {\n\n  public render() {\n    const posts: any[] = this.props.data.allMarkdownRemark.edges;\n    const siteMetadata = this.props.data.site.siteMetadata;\n\n    return (\n      <Layout>\n\n        <SEO {...siteMetadata} />\n\n        <Section id=\"about\" heading=\"About\">\n          <div dangerouslySetInnerHTML={{ __html: siteMetadata.description }} />\n        </Section>\n\n        <Section id=\"blog\" heading=\"Blog\">\n\n          <ul>\n            {this.buildPostList(posts)}\n          </ul>\n\n        </Section>\n\n        <Section id=\"contact\" heading=\"Contact\">\n\n          If you'd like to reach out, please do so at&nbsp;\n        <strong>\n            <a href=\"mailto:olivia_github@outlook.com\">\n              olivia_github@outlook.com\n          </a>\n          </strong>\n          .\n        </Section>\n\n      </Layout>\n    );\n  }\n\n  private buildPostList = (posts: any[]) => {\n    const postElements = [];\n\n    for (const item of posts) {\n      const post = item.node;\n\n      postElements.push((\n        <PostPreview\n          imageSizes={post.frontmatter.featuredImage.childImageSharp.sizes}\n          title={post.frontmatter.title}\n          excerpt={post.excerpt}\n          url={post.fields.slug}\n          date={post.frontmatter.date}\n        />\n      ));\n    }\n\n    return postElements;\n  }\n}"],"sourceRoot":""}